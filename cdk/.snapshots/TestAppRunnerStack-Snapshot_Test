(map[string]interface {}) (len=11) {
  (string) (len=29) "AppRunnerInstanceRole96A5A063": (map[string]interface {}) (len=2) {
    (string) (len=10) "Properties": (map[string]interface {}) (len=1) {
      (string) (len=24) "AssumeRolePolicyDocument": (map[string]interface {}) (len=2) {
        (string) (len=9) "Statement": ([]interface {}) (len=1) {
          (map[string]interface {}) (len=3) {
            (string) (len=6) "Action": (string) (len=14) "sts:AssumeRole",
            (string) (len=6) "Effect": (string) (len=5) "Allow",
            (string) (len=9) "Principal": (map[string]interface {}) (len=1) {
              (string) (len=7) "Service": (string) (len=29) "tasks.apprunner.amazonaws.com"
            }
          }
        },
        (string) (len=7) "Version": (string) (len=10) "2012-10-17"
      }
    },
    (string) (len=4) "Type": (string) (len=14) "AWS::IAM::Role"
  },
  (string) (len=18) "AppRunnerServiceL1": (map[string]interface {}) (len=2) {
    (string) (len=10) "Properties": (map[string]interface {}) (len=5) {
      (string) (len=27) "AutoScalingConfigurationArn": (map[string]interface {}) (len=1) {
        (string) (len=10) "Fn::GetAtt": ([]interface {}) (len=2) {
          (string) (len=24) "AutoScalingConfiguration",
          (string) (len=27) "AutoScalingConfigurationArn"
        }
      },
      (string) (len=24) "HealthCheckConfiguration": (map[string]interface {}) (len=2) {
        (string) (len=4) "Path": (string) (len=1) "/",
        (string) (len=8) "Protocol": (string) (len=4) "HTTP"
      },
      (string) (len=21) "InstanceConfiguration": (map[string]interface {}) (len=3) {
        (string) (len=3) "Cpu": (string) (len=6) "1 vCPU",
        (string) (len=15) "InstanceRoleArn": (map[string]interface {}) (len=1) {
          (string) (len=10) "Fn::GetAtt": ([]interface {}) (len=2) {
            (string) (len=29) "AppRunnerInstanceRole96A5A063",
            (string) (len=3) "Arn"
          }
        },
        (string) (len=6) "Memory": (string) (len=4) "2 GB"
      },
      (string) (len=20) "NetworkConfiguration": (map[string]interface {}) (len=1) {
        (string) (len=19) "EgressConfiguration": (map[string]interface {}) (len=2) {
          (string) (len=10) "EgressType": (string) (len=3) "VPC",
          (string) (len=15) "VpcConnectorArn": (map[string]interface {}) (len=1) {
            (string) (len=10) "Fn::GetAtt": ([]interface {}) (len=2) {
              (string) (len=14) "VpcConnectorL1",
              (string) (len=15) "VpcConnectorArn"
            }
          }
        }
      },
      (string) (len=19) "SourceConfiguration": (map[string]interface {}) (len=3) {
        (string) (len=27) "AuthenticationConfiguration": (map[string]interface {}) (len=1) {
          (string) (len=13) "ConnectionArn": (string) (len=109) "arn:aws:apprunner:ap-northeast-1:123456789012:connection/AppRunnerConnection/f353533982604b769ca11f4692a79660"
        },
        (string) (len=22) "AutoDeploymentsEnabled": (bool) true,
        (string) (len=14) "CodeRepository": (map[string]interface {}) (len=3) {
          (string) (len=17) "CodeConfiguration": (map[string]interface {}) (len=2) {
            (string) (len=23) "CodeConfigurationValues": (map[string]interface {}) (len=5) {
              (string) (len=12) "BuildCommand": (string) (len=20) "go install ./app/...",
              (string) (len=4) "Port": (string) (len=4) "8080",
              (string) (len=7) "Runtime": (string) (len=4) "GO_1",
              (string) (len=27) "RuntimeEnvironmentVariables": ([]interface {}) (len=1) {
                (map[string]interface {}) (len=2) {
                  (string) (len=4) "Name": (string) (len=4) "ENV1",
                  (string) (len=5) "Value": (string) (len=2) "L1"
                }
              },
              (string) (len=12) "StartCommand": (string) (len=18) "go run app/main.go"
            },
            (string) (len=19) "ConfigurationSource": (string) (len=3) "API"
          },
          (string) (len=13) "RepositoryUrl": (string) (len=54) "https://github.com/go-to-k/go-cdk-go-managed-apprunner",
          (string) (len=17) "SourceCodeVersion": (map[string]interface {}) (len=2) {
            (string) (len=4) "Type": (string) (len=6) "BRANCH",
            (string) (len=5) "Value": (string) (len=6) "master"
          }
        }
      }
    },
    (string) (len=4) "Type": (string) (len=23) "AWS::AppRunner::Service"
  },
  (string) (len=26) "AppRunnerServiceL2F17EEA5F": (map[string]interface {}) (len=2) {
    (string) (len=10) "Properties": (map[string]interface {}) (len=5) {
      (string) (len=27) "AutoScalingConfigurationArn": (map[string]interface {}) (len=1) {
        (string) (len=10) "Fn::GetAtt": ([]interface {}) (len=2) {
          (string) (len=24) "AutoScalingConfiguration",
          (string) (len=27) "AutoScalingConfigurationArn"
        }
      },
      (string) (len=24) "HealthCheckConfiguration": (map[string]interface {}) (len=2) {
        (string) (len=4) "Path": (string) (len=1) "/",
        (string) (len=8) "Protocol": (string) (len=4) "HTTP"
      },
      (string) (len=21) "InstanceConfiguration": (map[string]interface {}) (len=3) {
        (string) (len=3) "Cpu": (string) (len=6) "1 vCPU",
        (string) (len=15) "InstanceRoleArn": (map[string]interface {}) (len=1) {
          (string) (len=10) "Fn::GetAtt": ([]interface {}) (len=2) {
            (string) (len=29) "AppRunnerInstanceRole96A5A063",
            (string) (len=3) "Arn"
          }
        },
        (string) (len=6) "Memory": (string) (len=4) "2 GB"
      },
      (string) (len=20) "NetworkConfiguration": (map[string]interface {}) (len=1) {
        (string) (len=19) "EgressConfiguration": (map[string]interface {}) (len=2) {
          (string) (len=10) "EgressType": (string) (len=3) "VPC",
          (string) (len=15) "VpcConnectorArn": (map[string]interface {}) (len=1) {
            (string) (len=10) "Fn::GetAtt": ([]interface {}) (len=2) {
              (string) (len=22) "VpcConnectorL21FDECB18",
              (string) (len=15) "VpcConnectorArn"
            }
          }
        }
      },
      (string) (len=19) "SourceConfiguration": (map[string]interface {}) (len=3) {
        (string) (len=27) "AuthenticationConfiguration": (map[string]interface {}) (len=1) {
          (string) (len=13) "ConnectionArn": (string) (len=109) "arn:aws:apprunner:ap-northeast-1:123456789012:connection/AppRunnerConnection/f353533982604b769ca11f4692a79660"
        },
        (string) (len=22) "AutoDeploymentsEnabled": (string) (len=4) "true",
        (string) (len=14) "CodeRepository": (map[string]interface {}) (len=3) {
          (string) (len=17) "CodeConfiguration": (map[string]interface {}) (len=2) {
            (string) (len=23) "CodeConfigurationValues": (map[string]interface {}) (len=5) {
              (string) (len=12) "BuildCommand": (string) (len=20) "go install ./app/...",
              (string) (len=4) "Port": (string) (len=4) "8080",
              (string) (len=7) "Runtime": (string) (len=4) "GO_1",
              (string) (len=27) "RuntimeEnvironmentVariables": ([]interface {}) (len=1) {
                (map[string]interface {}) (len=2) {
                  (string) (len=4) "Name": (string) (len=4) "ENV1",
                  (string) (len=5) "Value": (string) (len=2) "L2"
                }
              },
              (string) (len=12) "StartCommand": (string) (len=18) "go run app/main.go"
            },
            (string) (len=19) "ConfigurationSource": (string) (len=3) "API"
          },
          (string) (len=13) "RepositoryUrl": (string) (len=54) "https://github.com/go-to-k/go-cdk-go-managed-apprunner",
          (string) (len=17) "SourceCodeVersion": (map[string]interface {}) (len=2) {
            (string) (len=4) "Type": (string) (len=6) "BRANCH",
            (string) (len=5) "Value": (string) (len=6) "master"
          }
        }
      }
    },
    (string) (len=4) "Type": (string) (len=23) "AWS::AppRunner::Service"
  },
  (string) (len=24) "AutoScalingConfiguration": (map[string]interface {}) (len=4) {
    (string) (len=14) "DeletionPolicy": (string) (len=6) "Delete",
    (string) (len=10) "Properties": (map[string]interface {}) (len=5) {
      (string) (len=28) "AutoScalingConfigurationName": (string) (len=14) "AppRunnerStack",
      (string) (len=14) "MaxConcurrency": (string) (len=2) "50",
      (string) (len=7) "MaxSize": (string) (len=1) "3",
      (string) (len=7) "MinSize": (string) (len=1) "1",
      (string) (len=12) "ServiceToken": (map[string]interface {}) (len=1) {
        (string) (len=10) "Fn::GetAtt": ([]interface {}) (len=2) {
          (string) (len=28) "CustomResourceLambda42C1FE6E",
          (string) (len=3) "Arn"
        }
      }
    },
    (string) (len=4) "Type": (string) (len=32) "Custom::AutoScalingConfiguration",
    (string) (len=19) "UpdateReplacePolicy": (string) (len=6) "Delete"
  },
  (string) (len=28) "CustomResourceLambda42C1FE6E": (map[string]interface {}) (len=3) {
    (string) (len=9) "DependsOn": ([]interface {}) (len=2) {
      (string) (len=52) "CustomResourceLambdaServiceRoleDefaultPolicy2AB589DB",
      (string) (len=39) "CustomResourceLambdaServiceRole757E6AFA"
    },
    (string) (len=10) "Properties": (map[string]interface {}) (len=4) {
      (string) (len=4) "Code": (map[string]interface {}) (len=2) {
        (string) (len=8) "S3Bucket": (string) (len=48) "cdk-hnb659fds-assets-123456789012-ap-northeast-1",
        (string) (len=5) "S3Key": (string) ""
      },
      (string) (len=7) "Handler": (string) (len=4) "main",
      (string) (len=4) "Role": (map[string]interface {}) (len=1) {
        (string) (len=10) "Fn::GetAtt": ([]interface {}) (len=2) {
          (string) (len=39) "CustomResourceLambdaServiceRole757E6AFA",
          (string) (len=3) "Arn"
        }
      },
      (string) (len=7) "Runtime": (string) (len=5) "go1.x"
    },
    (string) (len=4) "Type": (string) (len=21) "AWS::Lambda::Function"
  },
  (string) (len=39) "CustomResourceLambdaServiceRole757E6AFA": (map[string]interface {}) (len=2) {
    (string) (len=10) "Properties": (map[string]interface {}) (len=2) {
      (string) (len=24) "AssumeRolePolicyDocument": (map[string]interface {}) (len=2) {
        (string) (len=9) "Statement": ([]interface {}) (len=1) {
          (map[string]interface {}) (len=3) {
            (string) (len=6) "Action": (string) (len=14) "sts:AssumeRole",
            (string) (len=6) "Effect": (string) (len=5) "Allow",
            (string) (len=9) "Principal": (map[string]interface {}) (len=1) {
              (string) (len=7) "Service": (string) (len=20) "lambda.amazonaws.com"
            }
          }
        },
        (string) (len=7) "Version": (string) (len=10) "2012-10-17"
      },
      (string) (len=17) "ManagedPolicyArns": ([]interface {}) (len=1) {
        (map[string]interface {}) (len=1) {
          (string) (len=8) "Fn::Join": ([]interface {}) (len=2) {
            (string) "",
            ([]interface {}) (len=3) {
              (string) (len=4) "arn:",
              (map[string]interface {}) (len=1) {
                (string) (len=3) "Ref": (string) (len=14) "AWS::Partition"
              },
              (string) (len=57) ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
            }
          }
        }
      }
    },
    (string) (len=4) "Type": (string) (len=14) "AWS::IAM::Role"
  },
  (string) (len=52) "CustomResourceLambdaServiceRoleDefaultPolicy2AB589DB": (map[string]interface {}) (len=2) {
    (string) (len=10) "Properties": (map[string]interface {}) (len=3) {
      (string) (len=14) "PolicyDocument": (map[string]interface {}) (len=2) {
        (string) (len=9) "Statement": ([]interface {}) (len=1) {
          (map[string]interface {}) (len=3) {
            (string) (len=6) "Action": (string) (len=36) "apprunner:*AutoScalingConfiguration*",
            (string) (len=6) "Effect": (string) (len=5) "Allow",
            (string) (len=8) "Resource": (string) (len=1) "*"
          }
        },
        (string) (len=7) "Version": (string) (len=10) "2012-10-17"
      },
      (string) (len=10) "PolicyName": (string) (len=52) "CustomResourceLambdaServiceRoleDefaultPolicy2AB589DB",
      (string) (len=5) "Roles": ([]interface {}) (len=1) {
        (map[string]interface {}) (len=1) {
          (string) (len=3) "Ref": (string) (len=39) "CustomResourceLambdaServiceRole757E6AFA"
        }
      }
    },
    (string) (len=4) "Type": (string) (len=16) "AWS::IAM::Policy"
  },
  (string) (len=38) "SecurityGroupForVpcConnectorL10BB70B01": (map[string]interface {}) (len=2) {
    (string) (len=10) "Properties": (map[string]interface {}) (len=3) {
      (string) (len=16) "GroupDescription": (string) (len=30) "for AppRunner VPC Connector L1",
      (string) (len=19) "SecurityGroupEgress": ([]interface {}) (len=1) {
        (map[string]interface {}) (len=3) {
          (string) (len=6) "CidrIp": (string) (len=9) "0.0.0.0/0",
          (string) (len=11) "Description": (string) (len=37) "Allow all outbound traffic by default",
          (string) (len=10) "IpProtocol": (string) (len=2) "-1"
        }
      },
      (string) (len=5) "VpcId": (string) (len=9) "vpc-12345"
    },
    (string) (len=4) "Type": (string) (len=23) "AWS::EC2::SecurityGroup"
  },
  (string) (len=38) "SecurityGroupForVpcConnectorL2DABBAB1E": (map[string]interface {}) (len=2) {
    (string) (len=10) "Properties": (map[string]interface {}) (len=3) {
      (string) (len=16) "GroupDescription": (string) (len=30) "for AppRunner VPC Connector L2",
      (string) (len=19) "SecurityGroupEgress": ([]interface {}) (len=1) {
        (map[string]interface {}) (len=3) {
          (string) (len=6) "CidrIp": (string) (len=9) "0.0.0.0/0",
          (string) (len=11) "Description": (string) (len=37) "Allow all outbound traffic by default",
          (string) (len=10) "IpProtocol": (string) (len=2) "-1"
        }
      },
      (string) (len=5) "VpcId": (string) (len=9) "vpc-12345"
    },
    (string) (len=4) "Type": (string) (len=23) "AWS::EC2::SecurityGroup"
  },
  (string) (len=14) "VpcConnectorL1": (map[string]interface {}) (len=2) {
    (string) (len=10) "Properties": (map[string]interface {}) (len=2) {
      (string) (len=14) "SecurityGroups": ([]interface {}) (len=1) {
        (map[string]interface {}) (len=1) {
          (string) (len=10) "Fn::GetAtt": ([]interface {}) (len=2) {
            (string) (len=38) "SecurityGroupForVpcConnectorL10BB70B01",
            (string) (len=7) "GroupId"
          }
        }
      },
      (string) (len=7) "Subnets": ([]interface {}) (len=2) {
        (string) (len=24) "subnet-0176b5389a1e17b75",
        (string) (len=24) "subnet-049654543abe59bea"
      }
    },
    (string) (len=4) "Type": (string) (len=28) "AWS::AppRunner::VpcConnector"
  },
  (string) (len=22) "VpcConnectorL21FDECB18": (map[string]interface {}) (len=2) {
    (string) (len=10) "Properties": (map[string]interface {}) (len=2) {
      (string) (len=14) "SecurityGroups": ([]interface {}) (len=1) {
        (map[string]interface {}) (len=1) {
          (string) (len=10) "Fn::GetAtt": ([]interface {}) (len=2) {
            (string) (len=38) "SecurityGroupForVpcConnectorL2DABBAB1E",
            (string) (len=7) "GroupId"
          }
        }
      },
      (string) (len=7) "Subnets": ([]interface {}) (len=2) {
        (string) (len=24) "subnet-0176b5389a1e17b75",
        (string) (len=24) "subnet-049654543abe59bea"
      }
    },
    (string) (len=4) "Type": (string) (len=28) "AWS::AppRunner::VpcConnector"
  }
}
